<?php
if (!$block->canShow()):
    return;
endif;

$id = $block->getNameInLayout();

?>

<div id="<?= $id ?>-container"
    style="display: none"
    data-bind="scope: '<?= $id ?>'"
    data-destination="<?= $block->escapeHtmlAttr($block->getDestination()) ?>"
    class="abs-add-clearfix <?= $id ?>-container">
    <fieldset class="fieldset">
    <!-- ko foreach: { data: elems, as: 'element' } -->
        <!-- ko if: hasTemplate() -->
            <!-- ko template: getTemplate() --><!-- /ko -->
        <!-- /ko -->
    <!-- /ko -->
    </fieldset>
</div>

<script type="text/x-magento-init">
{
    "#<?= $id ?>-container": {
        "Magento_Ui/js/core/app": <?= $block->getJsLayout(); ?>
    }
}
</script>

<script type="text/javascript">
    require([
        'Magento_Ui/js/lib/view/utils/async',
        'underscore',
        'domReady!'
    ], function ($, _) {
        var fields = $('#<?= $id ?>-container'),
            container = $(fields.data('destination')),
            method = 'append';

        if (container.length) {
            if (container.length > 1) {
                container = container.last();
                method = 'after';
            }

            container[method](fields);
        }

        if (fields.closest('form').length) {
            fields.css('display', '');
        }

        $.async({
            selector: '.field.required .control > :first-child',
            ctx: $('#<?= $id ?>-container').get(0)
        }, function (el) {
            _.defer(handleRequired.bind(this), $(el));
        });

        function handleRequired(el) {
            if (!el || el.get(0).type === 'hidden') {
                return;
            }

            el.addClass('required-entry');
        }

        $.async({
            selector: '.field.multiple .control > :first-child',
            ctx: $('#<?= $id ?>-container').get(0)
        }, function (el) {
            _.defer(handleMultiple.bind(this), $(el));
        });

        function handleMultiple(el) {
            if (!el || el.get(0).type === 'hidden') {
                return;
            }

            el.attr('multiple', 'multiple');
        }
    });
</script>
